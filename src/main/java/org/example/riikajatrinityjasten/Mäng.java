package org.example.riikajatrinityjasten;

import javafx.application.Application;
import javafx.application.Platform;
import javafx.collections.FXCollections;
import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.scene.Scene;
import javafx.scene.control.*;
import javafx.scene.control.cell.PropertyValueFactory;
import javafx.scene.layout.*;
import javafx.scene.paint.Color;
import javafx.scene.text.Font;
import javafx.scene.text.FontWeight;
import javafx.scene.text.Text;
import javafx.scene.text.TextAlignment;
import javafx.stage.Stage;

import java.util.Arrays;
import java.util.Comparator;
import java.util.function.Consumer;
import java.util.stream.Collectors;

public class M√§ng extends Application {
    private StackPane juur;
    private M√§ngija praeguneM√§ngija;
    private M√§ngijateHaldur haldur = M√§ngijateHaldur.getInstance();
    private Riigid riigid;
    private int k√ºsimusteArv;


    public void m√§√§raPraeguneM√§ngija(String m√§ngijaNimi) {
        this.praeguneM√§ngija = haldur.getM√§ngija(m√§ngijaNimi);
        if (this.praeguneM√§ngija == null) {
            System.out.println("M√§ngijat ei leitud: " + m√§ngijaNimi);
        }
    }

    public static void n√§itaViga(String title, String content) {
        Alert teade = new Alert(Alert.AlertType.ERROR);
        teade.setTitle(title);
        teade.setHeaderText(null); // No header text
        teade.setContentText(content);
        teade.showAndWait();
    }

    @Override
    public void start(Stage lava) throws Exception {
        juur = new StackPane();
        n√§itaM√§nguAlgust();

        Scene stseen = new Scene(juur, 400, 300);
        stseen.getStylesheets().add(getClass().getResource("/styles.css").toExternalForm());

        lava.setScene(stseen);
        lava.setTitle("JavaFX Interface");
        lava.show();
    }

    private void n√§itaM√§nguAlgust() {
        juur.getChildren().clear();
        Text pealkiri = new Text("ü§© Tere tulemast Riikide √Ñraarvamisem√§ngu! ü§©");
        pealkiri.setFont(Font.font("Arial", FontWeight.MEDIUM, 14));

        Button nupp1 = new Button("Juhend");
        Button nupp2 = new Button("M√§ngima");
        nupp1.getStyleClass().add("default-button");
        nupp2.getStyleClass().add("success-button");
        nupp1.setOnAction(event -> n√§itaJuhendit());
        nupp2.setOnAction(event -> n√§itaNimeSisestust());

        HBox nupuKast = new HBox(10, nupp1, nupp2);
        nupuKast.setAlignment(Pos.CENTER);

        VBox keskmineKast = new VBox(20, pealkiri, nupuKast);
        keskmineKast.setAlignment(Pos.CENTER);

        keskmineKast.setPadding(new Insets(20));

        juur.getChildren().add(keskmineKast);
    }

    private void n√§itaJuhendit() {
        juur.getChildren().clear();
        Text pealkiri = new Text("\uD83D\uDCD6 Juhend \uD83D\uDCD6");
        pealkiri.setFont(Font.font("Arial", FontWeight.MEDIUM, 20));

        Text tekst = new Text("Ekraanile kuvatakse vihje, nt \"See riik on kaardi peal jalakujuline, mis j√§rel pead sina pakkuma, mis riigiga on tegemist. üòé Kui vastasid √µigesti, liidetakse sinu puntkiskoorile punkt.");
        tekst.setFont(Font.font("Arial", 14));
        tekst.setWrappingWidth(250);
        tekst.setTextAlignment(TextAlignment.CENTER);

        Button tagasiNupp = new Button("Tagasi");
        tagasiNupp.getStyleClass().add("default-button");

        tagasiNupp.setOnAction(event -> n√§itaM√§nguAlgust());

        VBox keskmineKast = new VBox(20, pealkiri, tekst, tagasiNupp);
        keskmineKast.setAlignment(Pos.CENTER);

        keskmineKast.setPadding(new Insets(20));

        juur.getChildren().add(keskmineKast);
    }

    public void n√§itaNimeSisestust() {
        juur.getChildren().clear();

        Label silt = new Label("Enne, kui asud m√§ngu kallale, sisesta oma nimi:");
        silt.setFont(Font.font("Arial", FontWeight.BOLD, 14));

        TextField tekstiSisend = new TextField();
        tekstiSisend.setPromptText("Nimi");

        Button edasiNupp = new Button("J√§tka");
        Button tagasiNupp = new Button("Tagasi");
        tagasiNupp.getStyleClass().add("default-button");
        edasiNupp.getStyleClass().add("success-button");

        edasiNupp.setOnAction(event -> {
            String m√§ngijaNimi = tekstiSisend.getText();

            if (!m√§ngijaNimi.isEmpty()) {
                M√§ngija m√§ngija = new M√§ngija(m√§ngijaNimi, 0);
                haldur.lisaM√§ngija(m√§ngijaNimi, m√§ngija);
                m√§√§raPraeguneM√§ngija(m√§ngijaNimi);
                n√§itaRiikideValikut();
            } else {
               n√§itaViga("Input Error", "Nimi ei tohi olla t√ºhi!");
            }

        });

        tagasiNupp.setOnAction(event -> n√§itaM√§nguAlgust());

        VBox layout = new VBox(10);
        layout.setAlignment(Pos.CENTER);
        HBox nupuKast = new HBox(10, tagasiNupp, edasiNupp);
        nupuKast.setAlignment(Pos.CENTER);
        layout.getChildren().addAll(silt, tekstiSisend, nupuKast);
        layout.setPadding(new Insets(20));

        juur.getChildren().add(layout);
    }

    public void n√§itaRiikideValikut() {
        juur.getChildren().clear();

        Label silt = new Label("Milliseid riike soovid arvata?");
        silt.setFont(Font.font("Arial", FontWeight.BOLD, 14));

        Button euroopaNupp = new Button("Euroopa");
        Button maailmaNupp = new Button("Maailm");

        euroopaNupp.getStyleClass().add("success-button");
        maailmaNupp.getStyleClass().add("success-button");

        euroopaNupp.setOnAction(e -> {
            try {
                riigid = new Riigid("euroopaliit.txt");
                n√§itaSoovitudK√ºsimusteArvu();
            } catch (Exception ex) {
                throw new RuntimeException(ex);
            }

        });
        maailmaNupp.setOnAction(e -> {
            try {
                riigid = new Riigid("maailm.txt");
                n√§itaSoovitudK√ºsimusteArvu();
            } catch (Exception ex) {
                throw new RuntimeException(ex);
            }

        });

        VBox layout = new VBox(10);
        layout.setAlignment(Pos.CENTER);
        HBox nupuKast = new HBox(10, euroopaNupp, maailmaNupp);
        nupuKast.setAlignment(Pos.CENTER);
        layout.getChildren().addAll(silt, nupuKast);
        layout.setPadding(new Insets(20));

        juur.getChildren().add(layout);


    }

    public void n√§itaSoovitudK√ºsimusteArvu() {
        juur.getChildren().clear();

        Label silt = new Label("Mitmele k√ºsimusele soovid vastata (1-27):");
        silt.setFont(Font.font("Arial", FontWeight.BOLD, 14));

        TextField teksiSisend = new TextField();
        teksiSisend.setPromptText("K√ºsimusi");
        Button edasiNupp = new Button("Alusta");
        edasiNupp.getStyleClass().add("success-button-disabled");
        teksiSisend.textProperty().addListener(((observableValue, old, newVal) -> {
            int k√ºsimusi = 0;
            if (!newVal.isEmpty()) {
                k√ºsimusi = Integer.parseInt(newVal);
            }
            if (k√ºsimusi < 27 && k√ºsimusi > 0) {
                edasiNupp.getStyleClass().add("success-button");
                edasiNupp.getStyleClass().remove("success-button-disabled");
            }

        }));

        edasiNupp.setOnAction(event -> {
           k√ºsimusteArv = Integer.parseInt(teksiSisend.getText());
            if (k√ºsimusteArv < 27 && k√ºsimusteArv > 0) {
                alustaM√§ngu();
            }
        });


        VBox layout = new VBox(10);
        layout.setAlignment(Pos.CENTER);
        HBox nupuKast = new HBox(10, edasiNupp);
        nupuKast.setAlignment(Pos.CENTER);
        layout.getChildren().addAll(silt, teksiSisend, nupuKast);
        layout.setPadding(new Insets(20));

        juur.getChildren().add(layout);
    }

    public void alustaM√§ngu() {
        n√§itaK√ºsimust();
    }

    public void n√§itaK√ºsimust() {
        if (k√ºsimusteArv > 0) {
            String[] rida = riigid.getRandomQuestion();
            String vastus = rida[0];
            String k√ºsimus = rida[1];
            System.out.println(vastus);

            juur.getChildren().clear();

            Text tekst = new Text("Vihje: " + k√ºsimus);
            tekst.setFont(Font.font("Arial", FontWeight.BOLD, 14));
            tekst.setWrappingWidth(250);
            tekst.setTextAlignment(TextAlignment.CENTER);

            TextField tekstiSisend = new TextField();
            tekstiSisend.setPromptText("Vastus");

            Button edasiNupp = new Button("Edasi");
            edasiNupp.getStyleClass().add("success-button");
            edasiNupp.setOnAction(event -> {
                String m√§ngijaVastus = tekstiSisend.getText();
                if (m√§ngijaVastus.trim().isEmpty()) {
                    n√§itaViga("Input Error", "Vastus ei tohi olla t√ºhi!");
                    return;
                }
                k√ºsimusteArv--;
                if (vastus.equalsIgnoreCase(m√§ngijaVastus)) {
                    haldur.getM√§ngija(praeguneM√§ngija.getNimi()).lisaPunkte(1);
                }
                if (k√ºsimusteArv > 0) {
                    n√§itaK√ºsimust();
                } else {
                    n√§itaEdetabelit();
                }
            });

            VBox layout = new VBox(10);
            layout.setAlignment(Pos.CENTER);
            HBox nupuKast = new HBox(10, edasiNupp);
            nupuKast.setAlignment(Pos.CENTER);
            layout.getChildren().addAll(tekst, tekstiSisend, nupuKast);
            layout.setPadding(new Insets(20));

            juur.getChildren().add(layout);
        }
    }
    public void n√§itaEdetabelit() {
        juur.getChildren().clear();

        TableView<M√§ngija> tabel = new TableView<>();
        TableColumn<M√§ngija, String> nimeVeerg = new TableColumn<>("M√§ngija Nimi");
        nimeVeerg.setCellValueFactory(new PropertyValueFactory<>("nimi"));

        TableColumn<M√§ngija, Number> skooriVeerg = new TableColumn<>("Punktid");
        skooriVeerg.setCellValueFactory(new PropertyValueFactory<>("skoor"));

        tabel.getColumns().add(nimeVeerg);
        tabel.getColumns().add(skooriVeerg);
        tabel.setItems(FXCollections.observableArrayList(haldur.getM√§ngijad().values().stream()
                .map(m -> new M√§ngija(m.getNimi(), m.getSkoor())).sorted(Comparator.comparingInt(M√§ngija::getSkoor)).collect(Collectors.toList())));

        Button l√µpetaNupp = new Button("L√µpeta m√§ngimine");
        l√µpetaNupp.getStyleClass().add("default-button");

        l√µpetaNupp.setOnAction(event -> Platform.exit());

        Button edasiNupp = new Button("J√§tka m√§ngimist");
        edasiNupp.getStyleClass().add("success-button");

        edasiNupp.setOnAction(event -> {
            n√§itaM√§nguAlgust();
        });

        VBox nupuKast = new VBox(10, edasiNupp, l√µpetaNupp);
        nupuKast.setAlignment(Pos.CENTER);

        HBox mainLayout = new HBox(10, tabel, nupuKast);
        mainLayout.setAlignment(Pos.CENTER);

        juur.getChildren().add(mainLayout);
    }




    public static void main(String[] args) {
        launch(args);
    }
}
