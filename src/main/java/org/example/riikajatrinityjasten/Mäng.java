package org.example.riikajatrinityjasten;

import javafx.application.Application;
import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.scene.Scene;
import javafx.scene.control.Alert;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.TextField;
import javafx.scene.layout.*;
import javafx.scene.paint.Color;
import javafx.scene.text.Font;
import javafx.scene.text.FontWeight;
import javafx.scene.text.Text;
import javafx.scene.text.TextAlignment;
import javafx.stage.Stage;

import java.util.Arrays;

public class M√§ng extends Application {
    private StackPane root;
    private M√§ngija praeguneM√§ngija;
    private M√§ngijateHaldur haldur = M√§ngijateHaldur.getInstance();
    private Riigid riigid;
    private int k√ºsimusteArv;


    public void m√§√§raPraeguneM√§ngija(String m√§ngijaNimi) {
        this.praeguneM√§ngija = haldur.getM√§ngija(m√§ngijaNimi);
        if (this.praeguneM√§ngija == null) {
            System.out.println("M√§ngijat ei leitud: " + m√§ngijaNimi);
        }
    }

    public void lisaPraeguseleM√§ngijalePunkte(int punktid) {
        if (praeguneM√§ngija != null) {
            praeguneM√§ngija.lisaPunkte(punktid);
        } else {
            System.out.println("Praegust m√§ngijat ei eksisteeri.");
        }
    }

    @Override
    public void start(Stage primaryStage) throws Exception {
        root = new StackPane();
        n√§itaM√§nguAlgust();

        Scene scene = new Scene(root, 400, 300);
        scene.getStylesheets().add(getClass().getResource("/styles.css").toExternalForm());

        primaryStage.setScene(scene);
        primaryStage.setTitle("JavaFX Interface");
        primaryStage.show();
    }

    private void n√§itaM√§nguAlgust() {
        root.getChildren().clear();
        Text title = new Text("ü§© Tere tulemast Riikide √Ñraarvamisem√§ngu! ü§©");
        title.setFont(Font.font("Arial", FontWeight.MEDIUM, 14));

        Button button1 = new Button("Juhend");
        Button button2 = new Button("M√§ngima");
        button1.getStyleClass().add("default-button");
        button2.getStyleClass().add("success-button");
        button1.setOnAction(event -> n√§itaJuhendit());
        button2.setOnAction(event -> n√§itaNimeSisestust());

        HBox buttonBox = new HBox(10, button1, button2);
        buttonBox.setAlignment(Pos.CENTER);

        VBox centerBox = new VBox(20, title, buttonBox);
        centerBox.setAlignment(Pos.CENTER);

        centerBox.setPadding(new Insets(20));

        root.getChildren().add(centerBox);
    }

    private void n√§itaJuhendit() {
        root.getChildren().clear();
        Text title = new Text("\uD83D\uDCD6 Juhend \uD83D\uDCD6");
        title.setFont(Font.font("Arial", FontWeight.MEDIUM, 20));

        Text text = new Text("Ekraanile kuvatakse vihje, nt \"See riik on kaardi peal jalakujuline, mis j√§rel pead sina pakkuma, mis riigiga on tegemist. üòé Kui vastasid √µigesti, liidetakse sinu puntkiskoorile punkt.");
        text.setFont(Font.font("Arial", 14));
        text.setWrappingWidth(250);
        text.setTextAlignment(TextAlignment.CENTER);

        Button backButton = new Button("Tagasi");
        backButton.getStyleClass().add("default-button");

        backButton.setOnAction(event -> n√§itaM√§nguAlgust());

        VBox centerBox = new VBox(20, title, text, backButton);
        centerBox.setAlignment(Pos.CENTER);

        centerBox.setPadding(new Insets(20));

        root.getChildren().add(centerBox);
    }

    public void n√§itaNimeSisestust() {
        root.getChildren().clear();

        Label label = new Label("Enne, kui asud m√§ngu kallale, sisesta oma nimi:");
        label.setFont(Font.font("Arial", FontWeight.BOLD, 14));

        TextField textField = new TextField();
        textField.setPromptText("Nimi");

        Button continueButton = new Button("J√§tka");
        Button backButton = new Button("Tagasi");
        backButton.getStyleClass().add("default-button");
        continueButton.getStyleClass().add("success-button");

        continueButton.setOnAction(event -> {
            String m√§ngijaNimi = textField.getText();

            if (!m√§ngijaNimi.isEmpty()) {
                M√§ngija m√§ngija = new M√§ngija(m√§ngijaNimi, 0);
                haldur.lisaM√§ngija(m√§ngijaNimi, m√§ngija);
                m√§√§raPraeguneM√§ngija(m√§ngijaNimi);
                System.out.println(praeguneM√§ngija.getNimi());
                System.out.println(haldur.getM√§ngijad());
                n√§itaRiikideValikut();
            }
        });

        backButton.setOnAction(event -> n√§itaM√§nguAlgust());

        VBox layout = new VBox(10);
        layout.setAlignment(Pos.CENTER);
        HBox buttonBox = new HBox(10, backButton, continueButton);
        buttonBox.setAlignment(Pos.CENTER);
        layout.getChildren().addAll(label, textField, buttonBox);
        layout.setPadding(new Insets(20));

        // Add the layout to the root pane
        root.getChildren().add(layout);
    }

    public void n√§itaRiikideValikut() {
        root.getChildren().clear();

        Label label = new Label("Milliseid riike soovid arvata?");
        label.setFont(Font.font("Arial", FontWeight.BOLD, 14));

        Button euroopaNupp = new Button("Euroopa");
        Button maailmaNupp = new Button("Maailm");

        euroopaNupp.getStyleClass().add("success-button");
        maailmaNupp.getStyleClass().add("success-button");

        euroopaNupp.setOnAction(e -> {
            try {
                riigid = new Riigid("euroopa.txt");
            } catch (Exception ex) {
                throw new RuntimeException(ex);
            }

        });
        maailmaNupp.setOnAction(e -> {
            try {
                riigid = new Riigid("maailm.txt");
                n√§itaSoovitudK√ºsimusteArvu();
            } catch (Exception ex) {
                throw new RuntimeException(ex);
            }

        });

        VBox layout = new VBox(10);
        layout.setAlignment(Pos.CENTER);
        HBox buttonBox = new HBox(10, euroopaNupp, maailmaNupp);
        buttonBox.setAlignment(Pos.CENTER);
        layout.getChildren().addAll(label, buttonBox);
        layout.setPadding(new Insets(20));

        // Add the layout to the root pane
        root.getChildren().add(layout);


    }

    public void n√§itaSoovitudK√ºsimusteArvu() {
        root.getChildren().clear();

        Label label = new Label("Mitmele k√ºsimusele soovid vastata (1-27):");
        label.setFont(Font.font("Arial", FontWeight.BOLD, 14));

        TextField textField = new TextField();
        textField.setPromptText("K√ºsimusi");
        Button continueButton = new Button("Alusta");
        continueButton.getStyleClass().add("success-button-disabled");
        textField.textProperty().addListener(((observableValue, old, newVal) -> {
            int k√ºsimusi = 0;
            if (!newVal.isEmpty()) {

                k√ºsimusi = Integer.parseInt(newVal);
            }
            if (k√ºsimusi < 27 && k√ºsimusi > 0) {
                continueButton.getStyleClass().add("success-button");
                continueButton.getStyleClass().remove("success-button-disabled");

            }
            System.out.println(k√ºsimusi);
        }));

        continueButton.setOnAction(event -> {
           k√ºsimusteArv = Integer.parseInt(textField.getText());
            System.out.println(Arrays.toString(riigid.getRandomQuestion()));
        });


        VBox layout = new VBox(10);
        layout.setAlignment(Pos.CENTER);
        HBox buttonBox = new HBox(10, continueButton);
        buttonBox.setAlignment(Pos.CENTER);
        layout.getChildren().addAll(label, textField, buttonBox);
        layout.setPadding(new Insets(20));

        // Add the layout to the root pane
        root.getChildren().add(layout);
    }

    public void alustaM√§ngu() {
        // veel mingid argumendid
        // TODO
    }

    public void n√§itaK√ºsimust(String k√ºsimus) {
        // veel mingid argumendid
        // TODO
    }
    public void n√§itaEdetabelit() {
        // TODO
    }




    public static void main(String[] args) {
        launch(args);
    }
}
